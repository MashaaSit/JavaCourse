Динамический полиморфизм в Java не может быть применен к статическим методам,
потому что статические методы привязываются к классу на этапе компиляции, а
не на этапе выполнения, как это происходит с экземплярными методами (методами, привязанными к объектам).


1. Статические методы привязываются на этапе компиляции:

    - Статические методы привязываются к классу, а не к объекту. Когда компилятор обрабатывает код, он
    определяет, какой статический метод должен быть вызван, исходя из типа ссылки (класса), а не типа
    объекта, на который эта ссылка указывает.
    - Это значит, что компилятор решает, какой метод должен быть вызван, еще до того, как программа начнет
    выполняться, и этот выбор не может изменяться в процессе выполнения программы.

2. Экземплярные методы (методы объектов) привязываются на этапе выполнения:

    - Экземплярные методы, напротив, привязываются на этапе выполнения (это называется динамическим связыванием).
     То есть, если объект имеет переопределенный метод в подклассе, то будет вызван метод подкласса, даже
     если переменная ссылается на объект родительского класса. В этом случае выбор метода зависит от
     реального типа объекта, а не от типа ссылки.

3. Статические методы не могут быть переопределены:

    - Статические методы не поддерживают переопределение в Java, так как они не являются методами
     экземпляра, и их вызов не зависит от экземпляра объекта.
    - Если в подклассе и суперклассе есть статические методы с одинаковыми именами, это скорее будет
    скрытием метода (shadowing), а не переопределением (overriding). В результате вызов статического
    метода будет зависеть от типа ссылки, а не от типа объекта.